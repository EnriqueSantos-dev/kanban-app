name: Deploy to VPS via Rsync

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy Job
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate release name
        id: release
        run: echo "NAME=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Deploy with rsync
        uses: easingthemes/ssh-deploy@v5.0.0
        with:
          REMOTE_HOST: ${{ secrets.VPS_HOST }}
          REMOTE_USER: ${{ secrets.VPS_USER }}

          SSH_PRIVATE_KEY: ${{ secrets.VPS_SSH_PRIVATE_KEY }}

          SOURCE: "./server/"

          TARGET: "${{ secrets.VPS_TARGET_PATH }}/releases/${{ steps.release.outputs.name }}/"

          # NÃ£o precisamos mais excluir o .env, pois ele nÃ£o estÃ¡ sendo gerenciado aqui
          EXCLUDE: "/.git/, /.github/, /node_modules/"

          ARGS: "-avz"

          SCRIPT_AFTER: |
            echo "ðŸš€ Deploy finalizado, configurando o ambiente..."
            # Navega para a pasta da aplicaÃ§Ã£o na VPS
            cd ${{ secrets.VPS_TARGET_PATH }}

            # Define o caminho da nova release
            RELEASE_PATH=$(ls -dr releases/*/ | head -n 1)
            echo "Nova release em: ${RELEASE_PATH}"

            echo "ðŸ”— Linkando arquivo .env"
            ln -nfs ${{ secrets.VPS_TARGET_PATH }}/shared/.env ${RELEASE_PATH}.env

            echo "ðŸ”„ Ativando nova release..."
            ln -nfs ${RELEASE_PATH} ${{ secrets.VPS_TARGET_PATH }}/current

            echo "âœ… Reiniciando a aplicaÃ§Ã£o..."
            bash deploy.sh 

            # 5. (Opcional) Limpa releases antigas, mantendo as 5 Ãºltimas
            echo "ðŸ§¹ Limpando releases antigas..."
            cd ${{ secrets.VPS_TARGET_PATH }}/releases && ls -dr */ | tail -n +6 | xargs -r rm -rf

            echo "ðŸŽ‰ Deploy concluÃ­do com sucesso!"
